{"version":3,"sources":["const.js","reducers/tasks.js","store.js","reducers/filter.js","reducers/index.js","components/title/title.js","components/title/index.js","components/todo-input/todo-input.js","components/todo-input/index.js","components/todo-item/todo-item.js","components/todo-item/index.js","components/todo-list/todo-list.js","components/todo-list/index.js","components/footer/footer.js","components/footer/index.js","containers/todo/todo.js","containers/todo/index.js","actions/actionCreator.js","App.js","registerServiceWorker.js","index.js"],"names":["FILTERS_BTN","text","id","ADD_TASK","REMOVE_TASK","COMPLETE_TASK","CHANGE_FILTER","TASKS","load","namespace","tasks","length","preloadedState","state","action","type","isCompleted","filter","task","map","activeFilter","rootReducer","combineReducers","composeEnhancers","compose","store","createStore","applyMiddleware","save","Title","title","className","defaultProps","ToDoInput","onChange","value","onKeyPress","placeholder","ToDoItem","removeTask","completeTask","onClick","ToDoList","tasksList","item","Footer","amount","changeFilter","ToDo","taskText","handleInputChange","target","setState","addTask","key","props","Date","getTime","filterTasks","getActiveTasksCounter","this","isTasksExist","filteredTasks","activeTasksCount","React","Component","connect","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.a98be390.chunk.js","sourcesContent":["const TASKS = [\r\n    {\r\n        id: 1,\r\n        text: 'Learn ReactJS',\r\n        isCompleted: true,\r\n    },\r\n    {\r\n        id: 2,\r\n        text: 'Learn Redux',\r\n        isCompleted: false,\r\n    },\r\n    {\r\n        id: 3,\r\n        text: 'Learn React Router',\r\n        isCompleted: false,\r\n    },\r\n];\r\n\r\nconst FILTERS_BTN = [\r\n    {\r\n        text: 'All',\r\n        id: 'all',\r\n    },\r\n    {\r\n        text: 'Active',\r\n        id: 'active',\r\n    },\r\n    {\r\n        text: 'Completed',\r\n        id: 'completed',\r\n    },\r\n];\r\n\r\nconst ADD_TASK = 'ADD_TASK';\r\nconst REMOVE_TASK = 'REMOVE_TASK';\r\nconst COMPLETE_TASK = 'COMPLETE_TASK';\r\nconst CHANGE_FILTER = 'CHANGE_FILTER';\r\n\r\nexport {\r\n    TASKS,\r\n    FILTERS_BTN,\r\n    ADD_TASK,\r\n    REMOVE_TASK,\r\n    COMPLETE_TASK,\r\n    CHANGE_FILTER,\r\n};\r\n","import { ADD_TASK, REMOVE_TASK, COMPLETE_TASK } from '../const';\r\nimport { load } from 'redux-localstorage-simple';\r\n\r\nlet TASKS = load({namespace: 'todo-list'});\r\n\r\nif (!TASKS || !TASKS.tasks || !TASKS.tasks.length) {\r\n    TASKS = {\r\n        tasks: [],\r\n    }\r\n}\r\n\r\nconst tasks = (state = TASKS.tasks, action) => {\r\n    switch (action.type) {\r\n        case ADD_TASK:\r\n            return [\r\n                ...state, {\r\n                    id: action.id,\r\n                    text: action.text,\r\n                    isCompleted: action.isCompleted,\r\n                }\r\n            ];\r\n        case REMOVE_TASK:\r\n            return [...state].filter(task => task.id !== action.id);\r\n        case COMPLETE_TASK:\r\n            return [...state].map(task => {\r\n                if (task.id === action.id) {\r\n                    task.isCompleted = !task.isCompleted;\r\n                }\r\n                return task;\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default tasks;\r\n","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport { save } from 'redux-localstorage-simple';\r\nimport rootReducer from './reducers/index';\r\n\r\n/* eslint-disable no-underscore-dangle */\r\nconst composeEnhancers =\r\n    process.env.NODE_ENV !== 'production' &&\r\n        typeof window === 'object' &&\r\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\r\n/* eslint-enable */\r\n\r\nconst configureStore = preloadedState => (\r\n    createStore(\r\n        rootReducer,\r\n        preloadedState,\r\n        composeEnhancers(\r\n            applyMiddleware(save({namespace: 'todo-list'}))\r\n        ),\r\n    )\r\n);\r\n\r\nconst store = configureStore({});\r\n\r\nexport default store;\r\n","import { CHANGE_FILTER } from '../const';\r\n\r\nconst BASE_FILTER = 'all';\r\n\r\nconst filter = (state = BASE_FILTER, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_FILTER:\r\n            return action.activeFilter;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default filter;\r\n","import { combineReducers } from 'redux';\r\nimport tasks from './tasks';\r\nimport filter from './filter';\r\n\r\nconst rootReducer = combineReducers({\r\n    tasks,\r\n    filter,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Title = ({ title }) => (\r\n    <h1 className=\"title\">{title}</h1>\r\n);\r\n\r\nTitle.propTypes = {\r\n    title: PropTypes.string,\r\n};\r\n\r\nTitle.defaultProps = {\r\n    title: 'Simple title',\r\n};\r\n\r\nexport default Title;\r\n","import Title from './title';\r\n\r\nexport default Title;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ToDoInput = ({ onChange, value, onKeyPress }) => (\r\n    <div className=\"todo-input-wrapper\">\r\n        <i className=\"fa fa-plus\" />\r\n        <input\r\n            className=\"todo-input\"\r\n            placeholder=\"Click to add task\"\r\n            onChange={onChange}\r\n            value={value}\r\n            onKeyPress={onKeyPress}\r\n        />\r\n    </div>\r\n);\r\n\r\nToDoInput.propTypes = {\r\n    onChange: PropTypes.func,\r\n    value: PropTypes.string,\r\n    onKeyPress: PropTypes.func,\r\n};\r\n\r\nToDoInput.defaultProps = {\r\n    onChange: () => { },\r\n    value: '',\r\n    onKeyPress: () => {},\r\n};\r\n\r\nexport default ToDoInput;\r\n","import ToDoInput from './todo-input';\r\n\r\nexport default ToDoInput;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ToDoItem = ({id, text, isCompleted, removeTask, completeTask }) => {\r\n    return (\r\n        <li onClick={() => completeTask(id)} className=\"todo-item\">\r\n            <i className={isCompleted ? 'mark fa fa-check-circle-o' : 'mark fa fa-circle-thin'} />\r\n            <span className={isCompleted ? 'completed text' : 'text'}>{text}</span>\r\n            <i onClick={() => removeTask(id)} className=\"fa fa-times\" />\r\n        </li>\r\n    );\r\n}; \r\n\r\nToDoItem.propTypes = {\r\n    id: PropTypes.number,\r\n    text: PropTypes.string,\r\n    isCompleted: PropTypes.bool,\r\n    removeTask: PropTypes.func,\r\n    completeTask: PropTypes.func,\r\n};\r\n\r\nToDoItem.defaultProps = {\r\n    id: 0,\r\n    text: '',\r\n    isCompleted: false,\r\n    removeTask: () => { },\r\n    completeTask: () => { },\r\n};\r\n\r\nexport default ToDoItem;\r\n","import ToDoItem from './todo-item';\r\n\r\nexport default ToDoItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ToDoItem from '../todo-item';\r\n\r\nconst ToDoList = ({ tasksList, removeTask, completeTask }) => {\r\n    return (\r\n        <ul className=\"todo-list\">\r\n            {tasksList.map((item) => (\r\n                <ToDoItem\r\n                    id={item.id}\r\n                    key={item.id}\r\n                    text={item.text}\r\n                    isCompleted={item.isCompleted}\r\n                    removeTask={removeTask}\r\n                    completeTask={completeTask}\r\n                />\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nToDoList.propTypes = {\r\n    tasksList: PropTypes.array,\r\n    removeTask: PropTypes.func,\r\n    completeTask: PropTypes.func,\r\n};\r\n\r\nToDoList.defaultProps = {\r\n    tasksList: [],\r\n    removeTask: () => { },\r\n    completeTask: () => {},\r\n};\r\n\r\nexport default ToDoList;","import ToDoList from './todo-list';\r\n\r\nexport default ToDoList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FILTERS_BTN } from '../../const';\r\n\r\nconst Footer = ({ amount, activeFilter, changeFilter }) => {\r\n    return (\r\n        <div className=\"footer\">\r\n            <span className=\"amount\">{`${amount} Tasks Left`}</span>\r\n            <div className=\"btn-group\">\r\n                {FILTERS_BTN.map(({ text, id }) => (\r\n                    <button\r\n                        onClick={() => changeFilter(id)}\r\n                        key={id}\r\n                        id={id}\r\n                        className={id === activeFilter ? \"filter-btn active\" : \"filter-btn\"}\r\n                    >{text}</button>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nFooter.propTypes = {\r\n    amount: PropTypes.number,\r\n    activeFilter: PropTypes.string,\r\n    changeFilter: PropTypes.func,\r\n};\r\n\r\nFooter.defaultProps = {\r\n    amount: 0,\r\n    activeFilter: 'all',\r\n    changeFilter: () => {},\r\n};\r\n\r\nexport default Footer;\r\n","import Footer from './footer';\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ToDoInput from '../../components/todo-input';\r\nimport ToDoList from '../../components/todo-list';\r\nimport Footer from '../../components/footer';\r\nimport { addTask, removeTask, completeTask, changeFilter } from '../../actions/actionCreator';\r\n\r\nclass ToDo extends React.Component {\r\n    state = {\r\n        taskText: '',\r\n    }\r\n\r\n    handleInputChange = ({ target: { value } }) => {\r\n        this.setState({\r\n            taskText: value,\r\n        });\r\n    }\r\n\r\n    addTask = ({ key }) => {\r\n        const { taskText } = this.state;\r\n\r\n        if (taskText.length > 3 && key === 'Enter') {\r\n            const { addTask } = this.props;\r\n            addTask((new Date()).getTime(), taskText, false);\r\n            this.setState({\r\n                taskText: '',\r\n            });\r\n        }\r\n    }\r\n\r\n    filterTasks = (tasks, activeFilter) => {\r\n        switch (activeFilter) {\r\n            case 'completed':\r\n                return tasks.filter(task => task.isCompleted);\r\n            case 'active':\r\n                return tasks.filter(task => !task.isCompleted);\r\n            default:\r\n                return tasks;\r\n        }\r\n    }\r\n\r\n    getActiveTasksCounter = (tasks) => {\r\n        return tasks.filter(task => !task.isCompleted).length;\r\n    }\r\n\r\n    render() {\r\n        const { taskText } = this.state;\r\n        const { tasks, filter, removeTask, completeTask, changeFilter } = this.props;\r\n        const isTasksExist = tasks && tasks.length > 0;\r\n        const filteredTasks = this.filterTasks(tasks, filter);\r\n        const activeTasksCount = this.getActiveTasksCounter(tasks);\r\n\r\n        return (\r\n            <div className=\"todo-wrapper\">\r\n                <ToDoInput\r\n                    onKeyPress={this.addTask}\r\n                    onChange={this.handleInputChange}\r\n                    value={taskText}\r\n                />\r\n                {isTasksExist && <ToDoList\r\n                    tasksList={filteredTasks}\r\n                    removeTask={removeTask}\r\n                    completeTask={completeTask}\r\n                />}\r\n                {isTasksExist && <Footer\r\n                    amount={activeTasksCount}\r\n                    activeFilter={filter}\r\n                    changeFilter={changeFilter}\r\n                />}\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    tasks: state.tasks,\r\n    filter: state.filter,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addTask, removeTask, completeTask, changeFilter })(ToDo);\r\n","import ToDo from './todo';\r\n\r\nexport default ToDo;\r\n","import { ADD_TASK, REMOVE_TASK, COMPLETE_TASK, CHANGE_FILTER } from '../const';\r\n\r\nconst addTask = (id, text, isCompleted) => ({\r\n    type: ADD_TASK,\r\n    id,\r\n    text,\r\n    isCompleted,\r\n});\r\n\r\nconst removeTask = (id) => ({\r\n    type: REMOVE_TASK,\r\n    id,\r\n});\r\n\r\nconst completeTask = (id) => ({\r\n    type: COMPLETE_TASK,\r\n    id,\r\n});\r\n\r\nconst changeFilter = (activeFilter) => ({\r\n    type: CHANGE_FILTER,\r\n    activeFilter,\r\n});\r\n\r\nexport {\r\n    addTask,\r\n    removeTask,\r\n    completeTask,\r\n    changeFilter,\r\n};\r\n","import React, { Fragment } from 'react';\nimport Title from './components/title';\nimport ToDo from './containers/todo';\n\nconst App = () => (\n  <Fragment>\n    <Title title=\"ToDo App\" />\n    <ToDo />\n  </Fragment>\n);\n\nexport default App;\n","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './index.css';\nimport '../node_modules/font-awesome/css/font-awesome.min.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render((\n  <Provider store={store}>\n    <App />\n  </Provider>\n),\n  document.getElementById('root')\n);\n\nregisterServiceWorker();\n"],"sourceRoot":""}